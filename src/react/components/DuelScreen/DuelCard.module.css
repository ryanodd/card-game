.duelCardTransformLayer[data-modifier-summoning-sickness="true"] {
  > * {
    filter: brightness(75%);
  }
}

.duelCardTransformLayer[data-modifier-burn="true"] {
  > * {
    filter: sepia(150%);
  }
}

.duelCardTransformLayer[data-modifier-stun="true"] {
  > * {
    filter: brightness(130%);
  }
}

.duelCardTransformLayer[data-modifier-poison="true"] {
  > * {
    filter: contrast(150%);
  }
}

.duelCardTransformLayer[data-animation-draw="true"][data-player-id="human"] {
  > * {
    position: relative;
    z-index: 20;
    animation: draw_human var(--current-animation-duration) cubic-bezier(0, 1, 0.44, 1);
  }
}

.duelCardTransformLayer[data-animation-draw="true"][data-player-id="opponent"] {
  > * {
    position: relative;
    z-index: 20;
    animation: draw_opponent var(--current-animation-duration) cubic-bezier(0, 1, 0.44, 1);
  }
}

@keyframes draw_human {
  0% {
    opacity: 0.05;
    transform: translateX(800px);
  }
  100% {
    opacity: 1;
    transform: translateX(0px);
  }
}

@keyframes draw_opponent {
  0% {
    opacity: 0.05;
    transform: translateX(-800px);
  }
  100% {
    opacity: 1;
    transform: translateX(0px);
  }
}

.duelCardTransformLayer[data-animation-attack-start="true"][data-player-id="human"] {
  > * {
    z-index: 20;
    animation: attack_start_human var(--current-animation-duration) ease-in;
  }
}

@keyframes attack_start_human {
  0% {
    transform: translateX(0px);
  }
  100% {
    transform: translateX(80px);
  }
}

.duelCardTransformLayer[data-animation-attack-start="true"][data-player-id="opponent"] {
  > * {
    z-index: 20;
    animation: attack_start_opponent var(--current-animation-duration) ease-in;
  }
}

@keyframes attack_start_opponent {
  0% {
    transform: translateX(0px);
  }
  100% {
    transform: translateX(-80px);
  }
}

.duelCardTransformLayer[data-animation-attack-end="true"][data-player-id="human"] {
  > * {
    z-index: 20;
    animation: attack_end_human var(--current-animation-duration) ease-out;
  }
}

@keyframes attack_end_human {
  0% {
    transform: translateX(80px);
  }
  100% {
    transform: translateX(0px);
  }
}

.duelCardTransformLayer[data-animation-attack-end="true"][data-player-id="opponent"] {
  > * {
    z-index: 20;
    animation: attack_end_opponent var(--current-animation-duration) ease-out;
  }
}

@keyframes attack_end_opponent {
  0% {
    transform: translateX(-80px);
  }
  100% {
    transform: translateX(0px);
  }
}

.duelCardTransformLayer[data-animation-opponent-summon="true"] {
  animation: opponent-summon var(--current-animation-duration);
}

@keyframes opponent-summon {
  0% {
    transform: translateY(-100px);
    opacity: 0.05;
  }
  100% {
    transform: translateY(0px);
    opaicty: 1;
  }
}

.duelCardTransformLayer[data-animation-destroy-start="true"] {
  animation: destroy-start var(--current-animation-duration);
}

@keyframes destroy-start {
  0% {
    filter: brightness(100%);
    opacity: 1;
  }
  100% {
    filter: brightness(0%);
    opacity: 0;
  }
}

.duelCardTransformLayer[data-animation-destroy-end="true"] {
  animation: destroy-end var(--current-animation-duration);
}

@keyframes destroy-end {
  0% {
  }
  100% {
  }
}

@keyframes animationActiveFilter {
  0% {
    filter: brightness(100%) contrast(100%);
  }
  20% {
    filter: brightness(125%) contrast(150%);
  }
  80% {
    filter: brightness(125%) contrast(150%);
  }
  100% {
    filter: brightness(100%) contrast(100%);
  }
}

.duelCardTransformLayer[data-animation-burn="true"] {
  > * {
    animation: burn var(--current-animation-duration);
  }
}

@keyframes burn {
  0% {
    filter: brightness(100%) contrast(100%);
  }
  20% {
    filter: brightness(50%) contrast(150%);
  }
  80% {
    filter: brightness(50%) contrast(150%);
  }
  100% {
    filter: brightness(100%) contrast(100%);
  }
}

.duelCardTransformLayer[data-animation-stun="true"] {
  > * {
    animation: stun var(--current-animation-duration);
  }
}

@keyframes stun {
  0% {
    filter: brightness(100%) contrast(100%);
  }
  20% {
    filter: brightness(50%) contrast(150%);
  }
  80% {
    filter: brightness(50%) contrast(150%);
  }
  100% {
    filter: brightness(100%) contrast(100%);
  }
}

.duelCardTransformLayer[data-animation-ember-foxling="true"] {
  > * {
    animation: animationActiveFilter var(--current-animation-duration);
  }
}
